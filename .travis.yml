# example travis.yml haxe configuration
language: c # change this to objective-c to test on a mac machine

services:
    - mongodb

env:
  matrix:
    # basic tests
    - TARGET=interp
    # haxe targets
    - TARGET=neko
    - TARGET=cpp
    - TARGET=java
    # haxe versions
    - TARGET=interp HAXE_VER=9044292
    - TARGET=interp HAXE_VER=3.1.3

matrix:
  fast_finish: true
  allow_failures:
    # target differences are mostly a driver responsibility
    - env: TARGET=cpp
    - env: TARGET=java
    # not all macro features used available in 3.1.3
    - env: TARGET=interp HAXE_VER=3.1.3

before_install: # clone travis-hx repo
  - travis_retry git clone --depth=50 --branch=master git://github.com/jonasmalacofilho/travis-hx.git ~/travis-hx

install: # setup the target
  - ~/travis-hx/setup.sh
  - haxelib install utest
  - haxelib git mongodb git://github.com/jonasmalacofilho/mongo-haxe-driver.git managers

script:
  - cd $TRAVIS_BUILD_DIR
  # build the target. This will call haxe with the HXFLAGS and HXFLAGS_EXTRA environment variables
  - HXFLAGS="-main TestAll -cp test -cp lib -lib utest -lib mongodb -D HXMOM_TYPER_TRACES -D travis" ~/travis-hx/build.sh
  # run the tests
  - ~/travis-hx/runtests.sh $FILENAME # this will set the $FILENAME defined on the environment variable to run the tests

